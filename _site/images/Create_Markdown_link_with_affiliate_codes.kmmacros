<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>AllWindows</key>
						<true/>
						<key>AlreadyActivatedActionType</key>
						<string>Normal</string>
						<key>Application</key>
						<dict>
							<key>BundleIdentifier</key>
							<string>net.elasticthreads.nv</string>
							<key>Name</key>
							<string>nvALT</string>
							<key>NewFile</key>
							<string>/Applications/nvALT.app</string>
						</dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>ActivateApplication</string>
						<key>ReopenWindows</key>
						<false/>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>JustDisplay</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetClipboardToText</string>
						<key>TargetNamedClipboardRedundantDisplayName</key>
						<string>Default Clipboard</string>
						<key>TargetNamedClipboardUID</key>
						<string>7560CEE4-EDBC-4D1C-B6A2-4E7608B5B2FC</string>
						<key>TargetUseNamedClipboard</key>
						<false/>
						<key>Text</key>
						<string>%SafariURL%</string>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Contains</string>
									<key>ClipboardText</key>
									<string>itunes.apple.com</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ClipboardTargetNamedClipboardRedundantDisplayName</key>
								<string>Default Clipboard</string>
								<key>ClipboardTargetNamedClipboardUID</key>
								<string>7560CEE4-EDBC-4D1C-B6A2-4E7608B5B2FC</string>
								<key>ClipboardTargetUseNamedClipboard</key>
								<false/>
								<key>DisplayKind</key>
								<string>Clipboard</string>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteShellScript</string>
								<key>Path</key>
								<string></string>
								<key>Text</key>
								<string>#!/usr/bin/python

# Via Dr. Drang
# http://www.leancrew.com/all-this/2013/08/new-apple-affiliate-link-scripts/

from subprocess import check_output
from sys import stdout

# My affiliate ID.
myID = '11l4RT'

# Get the URL from the clipboard.
clipURL = check_output('pbpaste')
  
# Add my ID and the partnerId parameter to the URL. If there are already
# queries, add them as additional ones; if not, add them as the only ones.
if '?' in clipURL:
  itemURL = '%s&amp;at=%s' % (clipURL, myID)
else:
  itemURL = '%s?at=%s' % (clipURL, myID)

# Write it out
stdout.write(itemURL)</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Contains</string>
									<key>ClipboardText</key>
									<string>amazon.com</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ClipboardTargetNamedClipboardRedundantDisplayName</key>
								<string>Default Clipboard</string>
								<key>ClipboardTargetNamedClipboardUID</key>
								<string>7560CEE4-EDBC-4D1C-B6A2-4E7608B5B2FC</string>
								<key>ClipboardTargetUseNamedClipboard</key>
								<false/>
								<key>DisplayKind</key>
								<string>Clipboard</string>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteShellScript</string>
								<key>Path</key>
								<string></string>
								<key>Text</key>
								<string>#!/usr/bin/env python

# (c) 2012 Brett Kelly.
# Licensed under the MIT license 
# http://www.opensource.org/licenses/mit-license.php 
# 
# Some edits from the original to get to to work in KM - ML

import re
import sys
from urlparse import urlparse
from subprocess import check_output

## PUT YOUR AFFILIATE CODE HERE
affcode = 'violeneces-20'

rawurl = check_output('pbpaste')

## Get the base url without all of the query string malarky
baseurl = rawurl.split('?')[0] 

try:
    parts = urlparse(baseurl)
except Exception:
    sys.stdout.write(rawurl)
    raise SystemExit

## Make sure it's actually an Amazon URL
amazonre = re.compile('[www\.]{0,1}amazon\.')

if not amazonre.search(parts.netloc):
    # Not an amazon URL, return whatever was passed initially
    sys.stdout.write(rawurl)
    raise SystemExit

# Format the simpler URL and append the affiliate code
goodurl = "%s://%s%s?tag=%s" % (parts.scheme,parts.netloc,parts.path,affcode)

# Write formatted URL to STDOUT
sys.stdout.write(goodurl)</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Action</key>
						<string>ByPasting</string>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>InsertText</string>
						<key>Paste</key>
						<true/>
						<key>Text</key>
						<string>[%SafariTitle%](%CurrentClipboard%)</string>
					</dict>
				</array>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>428561703.38074702</real>
				<key>Name</key>
				<string>Create Markdown link with affiliate codes</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>Case</key>
						<string>Exact</string>
						<key>DiacriticalsMatter</key>
						<true/>
						<key>MacroTriggerType</key>
						<string>TypedString</string>
						<key>OnlyAfterWordBreak</key>
						<false/>
						<key>SimulateDeletes</key>
						<true/>
						<key>TypedString</key>
						<string>mdlink</string>
					</dict>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>35</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>6912</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>5B6B6D82-29A6-436C-8E0E-9BAAE3A862FC</string>
			</dict>
		</array>
		<key>Name</key>
		<string>My Macros</string>
		<key>UID</key>
		<string>7143F0F3-6B05-448C-AA75-1E7DE3AB3520</string>
	</dict>
</array>
</plist>
